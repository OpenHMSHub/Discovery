{
  "custom": {},
  "params": {
    "activity_range": 36500,
    "age_max": {
      "$": [
        "ds",
        192,
        1663333401024
      ],
      "$columns": [
        {
          "data": [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            86,
            87,
            88,
            89,
            97,
            101,
            102,
            105,
            107,
            108,
            109,
            114,
            118,
            119,
            122
          ],
          "name": "value",
          "type": "Integer"
        },
        {
          "data": [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            86,
            87,
            88,
            89,
            97,
            101,
            102,
            105,
            107,
            108,
            109,
            114,
            118,
            119,
            122
          ],
          "name": "label",
          "type": "Integer"
        }
      ]
    },
    "age_min": {
      "$": [
        "ds",
        192,
        1663333401018
      ],
      "$columns": [
        {
          "data": [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            86,
            87,
            88,
            89,
            97,
            101,
            102,
            105,
            107,
            108,
            109,
            114,
            118,
            119,
            122
          ],
          "name": "value",
          "type": "Integer"
        },
        {
          "data": [
            0,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            86,
            87,
            88,
            89,
            97,
            101,
            102,
            105,
            107,
            108,
            109,
            114,
            118,
            119,
            122
          ],
          "name": "label",
          "type": "Integer"
        }
      ]
    }
  },
  "propConfig": {
    "params.activity_range": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.age_max": {
      "binding": {
        "config": {
          "path": "/root/Table.props.data"
        },
        "transforms": [
          {
            "code": "\theaders \u003d [\"value\", \"label\"]\n\tdata \u003d []\n\tif value \u003d\u003d None:\n\t\tpass\n\telif value.getRowCount() \u003d\u003d 0:\n\t\tpass\n\telse:\n\t\ts \u003d set()\n\t\tfor item in range(value.getRowCount()):\n\t\t\t#for val in value[item].values():\n\t\t\t#\ts.add(val)\n\t\t\tval \u003d value.getValueAt(item, \"age\")\n\t\t\tif val \u003d\u003d \u0027\u0027 or val \u003d\u003d None:\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tlabel \u003d val\n\t\t\tif val in s:\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tlist \u003d [val,label]\n\t\t\t\tdata.append(list)\n\t\t\t\ts.add(val)\n\tdata.sort()\n\tdataset \u003d system.dataset.toDataSet(headers, data)\n\treturn dataset",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    },
    "params.age_min": {
      "binding": {
        "config": {
          "path": "/root/Table.props.data"
        },
        "transforms": [
          {
            "code": "\theaders \u003d [\"value\", \"label\"]\n\tdata \u003d []\n\tif value \u003d\u003d None:\n\t\tpass\n\telif value.getRowCount() \u003d\u003d 0:\n\t\tpass\n\telse:\n\t\ts \u003d set()\n\t\tfor item in range(value.getRowCount()):\n\t\t\t#for val in value[item].values():\n\t\t   \t#\ts.add(val)\n\t\t\tval \u003d value.getValueAt(item, \"age\")\n\t\t\tif val \u003d\u003d \u0027\u0027 or val \u003d\u003d None:\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tlabel \u003d val\n\t\t\tif val in s:\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tlist \u003d [val,label]\n\t\t\t\tdata.append(list)\n\t\t\t\ts.add(val)\n\tdata.sort()\n\tdataset \u003d system.dataset.toDataSet(headers, data)\n\treturn dataset",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {},
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px",
          "display": false
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "../Table.props.data"
              },
              "transforms": [
                {
                  "code": "\tif value \u003d\u003d None:\n\t\t\toutput \u003d \u0027No Rows\u0027\n\telif value.getRowCount() \u003d\u003d 0:\n\t\toutput \u003d \u0027No Rows\u0027\n\telse:\n\t\toutput \u003d str(value.getRowCount()) + \u0027 Rows\u0027\n\treturn output",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Text/Error_Message"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onRowClick": {
              "config": {
                "script": "\timport traceback\n\ttry:\n\t\tselectedColumn \u003d self.props.selection.selectedColumn\n\t\tparticipantID \u003d self.props.data.getValueAt(event.row,\u0027ID\u0027)\n\t\t#shelterID \u003d self.props.data.getValueAt(event.row,\u0027shelterId\u0027)\n\t\t#system.perspective.print(selectedColumn)\n\t\t#system.perspective.print(participantID)\n\t\t#system.perspective.print(shelterID)\n\t\tif selectedColumn \u003d\u003d \"Detail\" or selectedColumn \u003d\u003d \"Name\": \n\t\t\t#Display the detail screen\n\t\t\t#system.perspective.print(\u0027Participant Detail\u0027)\n\t\t\ttab_id \u003d 1\n\t\t\tsystem.perspective.navigate(\"Participants/Detail/\" + str(participantID) + \"/\" + str(tab_id))\n\t\t#elif selectedColumn \u003d\u003d \"Options\":\n\t\telif selectedColumn \u003d\u003d \"ID\":\n\t\t\tid \u003d \"PreviewParticipant\" \n\t\t\tparams \u003d {\"participantID\":participantID}\n\t\t\tsystem.perspective.openDock(id\u003did,params\u003dparams)\n\t\telif selectedColumn \u003d\u003d \"Shelter\": \n\t\t\t#system.perspective.navigate(\"Shelter/0\")\n\t\t\tsystem.perspective.navigate(view \u003d \u0027Shelter/Detail/Shelter_Detail\u0027, params \u003d {\u0027shelterID\u0027:shelterID})\n\t\telif selectedColumn \u003d\u003d \"reservation\": \n\t\t\tsystem.perspective.navigate(\"Shelter/20\")\n\t\telse:\n\t\t\tpass\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants Dashboard Participants_table OnRowClick\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
              },
              "scope": "G",
              "type": "script"
            }
          },
          "system": {
            "onStartup": {
              "config": {
                "script": "\tsystem.perspective.sendMessage(\"clearFilter\")"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "100%",
          "shrink": 0
        },
        "propConfig": {
          "custom.sqlData": {
            "access": "PRIVATE",
            "binding": {
              "config": {
                "parameters": {
                  "activity_range": "{view.params.activity_range}",
                  "search": "{session.custom.filters.participantDashboard.Search.where}"
                },
                "queryPath": "Participants/Dashboard/ParticipantsDashboardSelect",
                "returnFormat": "dataset"
              },
              "type": "query"
            },
            "onChange": {
              "enabled": null,
              "script": "\timport traceback\n\t\n\ttry:\n\t\tdataset \u003d currentValue.value\n\t\tdays \u003d self.view.params.activity_range\n\t\tif dataset \u003d\u003d None:\n\t\t\tsystem.perspective.sendMessage(\"yearlyServicesParticipants\", payload \u003d {\"yearlyServicesParticipants\": 0, \"days\":days}, scope \u003d \"page\")\n\t\t\tsystem.perspective.sendMessage(\"activeParticipants\", payload \u003d {\"activeParticipants\": 0, \"days\":days}, scope \u003d \"page\")\n\t\t\tsystem.perspective.sendMessage(\"newParticipantsMonthly\", payload \u003d {\"newParticipantsMonthly\": 0}, scope \u003d \"page\")\n\t\t\tsystem.perspective.sendMessage(\"currentSuspensionsParticipants\", payload \u003d {\"currentSuspensionsParticipants\": 0, \"days\":days}, scope \u003d \"page\")\n\t\t\treturn\n\t\n\t\tnowYear \u003d system.date.getYear(system.date.now())\n\t\tthisYear \u003d system.date.parse(\u0027Jan 01, \u0027+ str(nowYear) + \u0027 00:00\u0027, \u0027MMMM dd, yyyy hh:mm\u0027)\n\t\ttoday \u003d system.date.now()\n\t\toneYearAgo \u003d system.date.addYears(today, -1)\n\t\t\n\t\t#Get selected participants\n\t\tidlist \u003d []\n\t\tfor\ti in range(dataset.getRowCount()):\n\t\t\tidlist.append(str(dataset.getValueAt(i, \"ID\")))\n\t\t\n\t\tstrIdList \u003d \u0027,\u0027.join(idlist)\n\t\n\t\t#KPI1 Total Services This Year\n\t\tparams \u003d {\"IdList\": strIdList, \"thisYear\": thisYear}\n\t\tresult \u003d system.db.runNamedQuery(\"Participants/Dashboard/TotalServicesYearToDate\", params)\n\t\tyearlyServicesParticipants \u003d result.getRowCount()\n\t\tsystem.perspective.sendMessage(\"yearlyServicesParticipants\", payload \u003d {\"yearlyServicesParticipants\": yearlyServicesParticipants, \"days\":days}, scope \u003d \"page\")\t\n\t\t\n\t\t#KPI2 Active participants Over 12 Months\n\t\t#params \u003d {\"IdList\": strIdList, \"oneYearAgo\": oneYearAgo}\n\t\t#result \u003d system.db.runNamedQuery(\"Participants/Dashboard/ActiveOverOneYear\", params)\n\t\t#activeParticipants \u003d 0\n\t\t#activeIdList \u003d []\n\t\t#for\ti in range(result.getRowCount()):\n\t\t#\tnr \u003d result.getValueAt(i, \"id\")\n\t\t#\tif nr not in activeIdList:\n\t\t#\t\tactiveParticipants +\u003d 1\n\t\t#\t\tactiveIdList.append(nr)\n\t\tactiveParticipants \u003d dataset.getRowCount()\n\t\tsystem.perspective.sendMessage(\"activeParticipants\", payload \u003d {\"activeParticipants\": activeParticipants, \"days\":days}, scope \u003d \"page\")\n\t\t\n\t\t#KPI3 New Participants Monthly\n\t\tMonthCount \u003d 6\n\t\tnewParticipantsMonthly \u003d []\n\t\tparams \u003d {\"IdList\": strIdList, \"MonthCount\": MonthCount}\n\t\tresult \u003d system.dataset.toPyDataSet(system.db.runNamedQuery(\"Participants/Dashboard/NewParticipantsLastNMonths\", params))\n\t\t\n\t\tnow \u003d system.date.now()\n\t\tfor i in range(MonthCount):\n\t\t\timonthago \u003d system.date.addMonths(now, -i)\n\t\t\tmonth \u003d system.date.getMonth(imonthago) + 1\n\t\t\tappend_item \u003d {\"time\": system.date.toMillis(imonthago), \"Participants\": 0}\n\t\t\tfor row in result:\n\t\t\t\tif month \u003d\u003d row[0]:\n\t\t\t\t\t#system.perspective.print(\u0027Month: \u0027 + str(row[0]) + \u0027 Num: \u0027 + str(row[1]))\n\t\t\t\t\tappend_item[\"Participants\"] \u003d row[1]\n\t\t\t\t\tbreak\n\n\t\t\tnewParticipantsMonthly.append(append_item)\n\n\t\tnewParticipantsMonthly.reverse()\n\t\t#system.perspective.print(newParticipantsMonthly)\n\t\tsystem.perspective.sendMessage(\"newParticipantsMonthly\", payload \u003d {\"newParticipantsMonthly\": newParticipantsMonthly}, scope \u003d \"page\") \n\t\n\n\t\t#KPI4 Current Suspensions\n\t\tparams \u003d {\"IdList\": strIdList}\n\t\tresult \u003d system.db.runNamedQuery(\"Participants/Dashboard/CurrentSuspensions\", params)\n\t\tcurrentSuspensionsParticipants \u003d result.getRowCount()\n\t\tsystem.perspective.sendMessage(\"currentSuspensionsParticipants\", payload \u003d {\"currentSuspensionsParticipants\": currentSuspensionsParticipants, \"days\":days}, scope \u003d \"page\")\n\t\t\n\texcept:\n\t\tlogger \u003d system.util.getLogger(\"Participants Dashboard Particpants Table custom.SQLData KPI\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)"
            }
          },
          "props.data": {
            "binding": {
              "config": {
                "path": "this.custom.sqlData"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "cells": {
            "style": {
              "classes": "Table/Cell_Dashboard"
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "ID",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "background-origin": "content-box",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "wordWrap": "break-word"
                },
                "title": " "
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "1_TEMPLATES/Tables/TableOptions",
              "visible": false,
              "width": 35
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Detail",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "background-origin": "content-box",
                  "classes": "Table/Column_Header",
                  "color": "#F3F4F8",
                  "cursor": "pointer",
                  "wordWrap": "break-word"
                },
                "title": "D"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "1_TEMPLATES/Tables/TableDetail",
              "visible": false,
              "width": 25
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Suspension",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "background-origin": "content-box",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "wordWrap": "break-word"
                },
                "title": " "
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "1_TEMPLATES/Tables/TableAlert",
              "visible": true,
              "width": 30
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "fullRegistration",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "background-origin": "content-box",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "wordWrap": "break-word"
                },
                "title": " "
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "1_TEMPLATES/Tables/TablePartial",
              "visible": true,
              "width": 30
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Name",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "background-origin": "content-box",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "wordWrap": "break-word"
                },
                "title": "Name"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "string",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "",
                "color": "#0c4e85",
                "cursor": "pointer",
                "fontFamily": "Proxima Nova ExCn Medium",
                "fontWeight": "bold",
                "text-align": "left"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "Participants/Dashboard/Components/Tables/Templates/Name",
              "visible": true,
              "width": 200
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Age",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "background-origin": "content-box",
                  "classes": "Table/Column_Header",
                  "cursor": "pointer",
                  "wordWrap": "break-word"
                },
                "title": "Age"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "#62A3F6",
                  "linecap": "round",
                  "width": 5
                },
                "max": 100,
                "track": {
                  "color": "#DADADA",
                  "linecap": "round",
                  "width": 2
                },
                "value": {
                  "color": "#7D7D7D",
                  "show": true
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Table/Column_Normal"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "#2196F3",
                  "unselected": "#FFFFFF"
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 80
            }
          ],
          "headerGroups": [
            [
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Name"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "ID"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Birth Date"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Gender"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Intake Date"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Last Action"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Suspension"
              },
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "background-origin": "content-box",
                  "background-size": "15px",
                  "backgroundImage": "url(\"/system/images/SVGs/Arrow (Menu).svg\")",
                  "backgroundPosition": "right center",
                  "backgroundRepeat": "no-repeat",
                  "classes": "",
                  "color": "#0d80e3",
                  "wordWrap": "break-word"
                },
                "title": "Shelter"
              }
            ]
          ],
          "pager": {
            "initialOption": 50,
            "options": [
              50,
              500,
              1000,
              2000,
              5000
            ]
          },
          "rows": {
            "highlight": {
              "color": "#D5D5D5"
            },
            "striped": {
              "enabled": false
            }
          },
          "style": {
            "classes": "Background/Default",
            "overflowX": "hidden"
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "refreshParticipants",
              "pageScope": true,
              "script": "\t#self.refreshBinding(\"custom.sqlData\")\n\tself.refreshBinding(\"props.data\")",
              "sessionScope": true,
              "viewScope": true
            },
            {
              "messageType": "tableToExcel",
              "pageScope": true,
              "script": "\timport traceback\n\ttry:\n\t\t#Send the dataset to Excel\n\t\tfilename \u003d \u0027participants_dashboard_\u0027 + str(system.date.format(system.date.now(),\"yyyyMMddHHmmss\")) + \u0027.xls\u0027\n\t\tdataset \u003d self.props.data\n\t\txlFile \u003d system.dataset.toExcel(True,dataset)\n\t\tsystem.perspective.download(filename, xlFile)\n\texcept:   \n\t\tlogger \u003d system.util.getLogger(\"Participants Dashboard tableToExcel\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)",
              "sessionScope": false,
              "viewScope": false
            },
            {
              "messageType": "tableToPDF",
              "pageScope": true,
              "script": "\timport traceback\n\ttry:\n\t\t#Generate the report\n\t\tproject \u003d \"RITI\"\n\t\tpath \u003d \"ParticipantsDashboard\"\n\t\tparameters \u003d {\u0027activityRange\u0027:self.view.params.activity_range,\n\t\t\t\t\t\u0027genderId\u0027:self.session.custom.filters.participantDashboard.GenderId.where}\n\t\tpdfFile \u003d system.report.executeReport(path,project,parameters,fileType\u003d\u0027pdf\u0027)\n\t\tfilename \u003d \u0027participants_dashboard_\u0027 + str(system.date.format(system.date.now(),\"yyyyMMddHHmmss\")) + \u0027.pdf\u0027\n\n\t\tsystem.perspective.download(filename, pdfFile)\n\texcept:   \n\t\tlogger \u003d system.util.getLogger(\"Participants Dashboard tableToExcel\")\n\t\tmsg \u003d traceback.format_exc()\n\t\tlogger.error(msg)",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "justify": "space-evenly",
      "style": {
        "classes": "Background/Alternative"
      }
    },
    "type": "ia.container.flex"
  }
}